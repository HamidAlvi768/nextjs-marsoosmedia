{
  "info": {
    "name": "EduPlatform API Tests",
    "description": "Complete API testing collection for the EduPlatform application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "courseId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "blogPostId",
      "value": "1",
      "type": "string"
    },
    {
      "key": "commentId",
      "value": "1",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"student\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Auth token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"student@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.user.id);",
                  "    console.log('Auth token saved:', response.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\",\n  \"bio\": \"Updated bio information\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Courses",
      "item": [
        {
          "name": "Get All Courses",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/courses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses"]
            }
          }
        },
        {
          "name": "Get Courses with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/courses?category=Web Development&level=intermediate&search=React",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses"],
              "query": [
                {
                  "key": "category",
                  "value": "Web Development"
                },
                {
                  "key": "level",
                  "value": "intermediate"
                },
                {
                  "key": "search",
                  "value": "React"
                }
              ]
            }
          }
        },
        {
          "name": "Get Course by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses", "{{courseId}}"]
            }
          }
        },
        {
          "name": "Create Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Advanced JavaScript\",\n  \"description\": \"Master advanced JavaScript concepts including closures, prototypes, and async programming.\",\n  \"instructor\": \"John Doe\",\n  \"instructorId\": \"1\",\n  \"price\": 149.99,\n  \"duration\": \"10 weeks\",\n  \"level\": \"advanced\",\n  \"thumbnail\": \"/placeholder.svg?height=300&width=400&text=JavaScript+Course\",\n  \"category\": \"Programming\",\n  \"lessons\": [\n    {\n      \"id\": \"1\",\n      \"courseId\": \"3\",\n      \"title\": \"Introduction to Advanced JavaScript\",\n      \"description\": \"Getting started with advanced concepts\",\n      \"content\": \"JavaScript is a powerful language...\",\n      \"duration\": 60,\n      \"order\": 1\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('courseId', response.course.id);",
                  "    console.log('Course ID saved:', response.course.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Course",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Advanced JavaScript - Updated\",\n  \"description\": \"Master advanced JavaScript concepts including closures, prototypes, and async programming. Updated content.\",\n  \"price\": 129.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses", "{{courseId}}"]
            }
          }
        },
        {
          "name": "Enroll in Course",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}/enroll",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses", "{{courseId}}", "enroll"]
            }
          }
        },
        {
          "name": "Delete Course",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/courses/{{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses", "{{courseId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Enrollments",
      "item": [
        {
          "name": "Get All Enrollments",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/enrollments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "enrollments"]
            }
          }
        },
        {
          "name": "Get Enrollments by User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/enrollments?userId={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "enrollments"],
              "query": [
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            }
          }
        },
        {
          "name": "Get Enrollments by Course",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/enrollments?courseId={{courseId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "enrollments"],
              "query": [
                {
                  "key": "courseId",
                  "value": "{{courseId}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Blog Posts",
      "item": [
        {
          "name": "Get All Blog Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog"]
            }
          }
        },
        {
          "name": "Get Blog Posts with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog?category=Technology&published=true&sortBy=newest&search=React",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog"],
              "query": [
                {
                  "key": "category",
                  "value": "Technology"
                },
                {
                  "key": "published",
                  "value": "true"
                },
                {
                  "key": "sortBy",
                  "value": "newest"
                },
                {
                  "key": "search",
                  "value": "React"
                }
              ]
            }
          }
        },
        {
          "name": "Get Blog Post by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}"]
            }
          }
        },
        {
          "name": "Create Blog Post",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Understanding React Server Components\",\n  \"content\": \"React Server Components represent a new paradigm in React development, allowing components to render on the server and be sent to the client as a serialized representation. This approach offers several benefits including reduced bundle size, improved performance, and better SEO.\\n\\nIn this article, we'll explore how Server Components work, their benefits, and how to implement them in your Next.js applications.\",\n  \"excerpt\": \"Learn about React Server Components and how they revolutionize the way we build React applications.\",\n  \"author\": \"John Doe\",\n  \"authorId\": \"1\",\n  \"thumbnail\": \"/placeholder.svg?height=400&width=600&text=React+Server+Components\",\n  \"category\": \"Technology\",\n  \"tags\": [\"react\", \"server-components\", \"nextjs\", \"performance\"],\n  \"isPublished\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('blogPostId', response.post.id);",
                  "    console.log('Blog Post ID saved:', response.post.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Blog Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Understanding React Server Components - Updated\",\n  \"content\": \"React Server Components represent a new paradigm in React development, allowing components to render on the server and be sent to the client as a serialized representation. This approach offers several benefits including reduced bundle size, improved performance, and better SEO.\\n\\nIn this updated article, we'll explore how Server Components work, their benefits, and how to implement them in your Next.js applications with practical examples.\",\n  \"isPublished\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}"]
            }
          }
        },
        {
          "name": "Delete Blog Post",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Comments",
      "item": [
        {
          "name": "Get Comments for Blog Post",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}", "comments"]
            }
          }
        },
        {
          "name": "Add Comment to Blog Post",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"userName\": \"Test User\",\n  \"userAvatar\": \"/placeholder.svg?height=40&width=40\",\n  \"content\": \"This is a great article! I learned a lot about React Server Components.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}/comments",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}", "comments"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('commentId', response.comment.id);",
                  "    console.log('Comment ID saved:', response.comment.id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Comment",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"This is an updated comment! I learned even more about React Server Components after reading the full article.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}", "comments", "{{commentId}}"]
            }
          }
        },
        {
          "name": "Delete Comment",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/{{blogPostId}}/comments/{{commentId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "{{blogPostId}}", "comments", "{{commentId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Course ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/courses/invalid-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "courses", "invalid-id"]
            }
          }
        },
        {
          "name": "Invalid Blog Post ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/blog/invalid-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "blog", "invalid-id"]
            }
          }
        },
        {
          "name": "Invalid Registration Data",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"email\": \"invalid-email\",\n  \"password\": \"123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Invalid Login Credentials",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Unauthorized Profile Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "profile"]
            }
          }
        }
      ]
    }
  ]
}
